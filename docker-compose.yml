version: "3.8"

services:
  # PostgreSQL база данных для разработки
  postgres-dev:
    image: postgres:15-alpine
    container_name: botmanager-postgres-dev
    environment:
      POSTGRES_DB: botmanager_dev
      POSTGRES_USER: botmanager
      POSTGRES_PASSWORD: botmanager_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./backend/scripts/dev-setup.sql:/docker-entrypoint-initdb.d/dev-setup.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botmanager -d botmanager_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - botmanager-dev-network
    restart: unless-stopped

  # Redis для разработки
  redis-dev:
    image: redis:7-alpine
    container_name: botmanager-redis-dev
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --requirepass botmanager_redis_password
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "botmanager_redis_password", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - botmanager-dev-network
    restart: unless-stopped

  # pgAdmin для управления базой данных (опционально)
  pgadmin-dev:
    image: dpage/pgadmin4:latest
    container_name: botmanager-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@botmanager.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres-dev
    networks:
      - botmanager-dev-network
    restart: unless-stopped
    profiles:
      - tools

  # Redis Commander для управления Redis (опционально)
  redis-commander-dev:
    image: rediscommander/redis-commander:latest
    container_name: botmanager-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis-dev:6379:0:botmanager_redis_password
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - redis-dev
    networks:
      - botmanager-dev-network
    restart: unless-stopped
    profiles:
      - tools

  # Loki для централизованного логирования (опционально)
  loki-dev:
    image: grafana/loki:2.9.0
    container_name: botmanager-loki-dev
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_dev_data:/loki
    ports:
      - "3100:3100"
    networks:
      - botmanager-dev-network
    restart: unless-stopped
    profiles:
      - logging

  # Grafana для визуализации логов (опционально)
  grafana-dev:
    image: grafana/grafana:latest
    container_name: botmanager-grafana-dev
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_dev_data:/var/lib/grafana
    ports:
      - "3002:3000"
    depends_on:
      - loki-dev
    networks:
      - botmanager-dev-network
    restart: unless-stopped
    profiles:
      - logging

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  redis_commander_dev_data:
    driver: local
  loki_dev_data:
    driver: local
  grafana_dev_data:
    driver: local

networks:
  botmanager-dev-network:
    driver: bridge
    name: botmanager-dev-network
