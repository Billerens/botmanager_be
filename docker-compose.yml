version: "3.8"

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: botmanager-postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-botmanager_prod}
      POSTGRES_USER: ${DATABASE_USERNAME:-botmanager}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-botmanager_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DATABASE_USERNAME:-botmanager} -d ${DATABASE_NAME:-botmanager_prod}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - botmanager-network

  # Redis для кэширования и очередей
  redis:
    image: redis:7-alpine
    container_name: botmanager-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - botmanager-network

  # BotManager API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: botmanager-api
    environment:
      # База данных
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: ${DATABASE_USERNAME:-botmanager}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-botmanager_password}
      DATABASE_NAME: ${DATABASE_NAME:-botmanager_prod}

      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}

      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-32-chars}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-secret-key-change-in-production}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}

      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-https://botmanagertest.online}

      # API
      API_PREFIX: ${API_PREFIX:-api}
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}

      # Webhook
      WEBHOOK_BASE_URL: ${WEBHOOK_BASE_URL:-https://api.botmanagertest.online}

      # Telegram
      TELEGRAM_BOT_API_URL: ${TELEGRAM_BOT_API_URL:-https://api.telegram.org/bot}

      # Шифрование
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev-32-character-secret-key-12345}

      # Логирование
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - botmanager-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  botmanager-network:
    driver: bridge
