# ===========================================
# BotManager Backend - Environment Template
# ===========================================
# Скопируйте этот файл в .env и настройте значения для вашего окружения

# ===========================================
# ОСНОВНЫЕ НАСТРОЙКИ ПРИЛОЖЕНИЯ
# ===========================================
NODE_ENV=development
PORT=3000
API_PREFIX=api

# ===========================================
# БАЗА ДАННЫХ (ОБЯЗАТЕЛЬНО)
# ===========================================
# PostgreSQL настройки
# Для локальной разработки используйте docker-compose.yml:
# ./scripts/dev-db.ps1 start-basic (Windows) или ./scripts/dev-db.sh start-basic (Linux/Mac)
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=botmanager
DATABASE_PASSWORD=botmanager_password
DATABASE_NAME=botmanager_dev

# ===========================================
# REDIS (ОБЯЗАТЕЛЬНО)
# ===========================================
# Redis для кэширования и очередей
# Для локальной разработки автоматически запускается с PostgreSQL
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=botmanager_redis_password

# Альтернативно можно использовать REDIS_URL:
# REDIS_URL=redis://localhost:6379

# ===========================================
# JWT АУТЕНТИФИКАЦИЯ (ОБЯЗАТЕЛЬНО)
# ===========================================
# Основной JWT секрет (минимум 32 символа)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-min-32-chars
JWT_EXPIRES_IN=7d

# Refresh токен секрет (минимум 32 символа)
JWT_REFRESH_SECRET=your-refresh-secret-key-change-this-in-production-min-32-chars
JWT_REFRESH_EXPIRES_IN=30d

# ===========================================
# CORS НАСТРОЙКИ
# ===========================================
# Разрешенные домены для CORS (разделяйте запятыми)
CORS_ORIGIN=http://localhost:3001,https://botmanagertest.online

# ===========================================
# TELEGRAM API
# ===========================================
# Базовый URL для Telegram Bot API
TELEGRAM_BOT_API_URL=https://api.telegram.org/bot

# Базовый URL для webhook'ов (должен быть доступен извне)
WEBHOOK_BASE_URL=http://localhost:3000

# ===========================================
# ШИФРОВАНИЕ
# ===========================================
# Ключ для шифрования чувствительных данных (точно 32 символа)
ENCRYPTION_KEY=your-32-character-secret-key-here

# ===========================================
# EMAIL НАСТРОЙКИ (ОПЦИОНАЛЬНО)
# ===========================================
# SMTP настройки для отправки email
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USER=
SMTP_PASS=
SMTP_FROM=noreply@botmanager.local

# ===========================================
# ЛОГИРОВАНИЕ
# ===========================================
# Уровень логирования (error, warn, info, debug, verbose)
LOG_LEVEL=debug

# Loki для централизованного логирования (опционально)
LOKI_HOST=http://localhost:3100

# ===========================================
# ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ
# ===========================================
# URL фронтенда для WebSocket соединений
FRONTEND_URL=http://localhost:3001

# Хост для привязки сервера (опционально)
HOST=localhost

# ===========================================
# ПРОИЗВОДСТВЕННЫЕ НАСТРОЙКИ
# ===========================================
# Для production окружения раскомментируйте и настройте:

# NODE_ENV=production
# PORT=3000
# DATABASE_HOST=your-production-db-host
# DATABASE_USERNAME=your-production-db-user
# DATABASE_PASSWORD=your-production-db-password
# DATABASE_NAME=botmanager_prod
# REDIS_HOST=your-production-redis-host
# REDIS_PASSWORD=your-production-redis-password
# JWT_SECRET=your-production-jwt-secret-min-32-characters-long
# JWT_REFRESH_SECRET=your-production-refresh-secret-min-32-characters-long
# CORS_ORIGIN=https://yourdomain.com,https://www.yourdomain.com
# WEBHOOK_BASE_URL=https://api.yourdomain.com
# ENCRYPTION_KEY=your-production-32-character-encryption-key
# SMTP_HOST=your-smtp-server.com
# SMTP_PORT=587
# SMTP_USER=your-smtp-username
# SMTP_PASS=your-smtp-password
# SMTP_FROM=noreply@yourdomain.com
# LOG_LEVEL=info
# FRONTEND_URL=https://yourdomain.com